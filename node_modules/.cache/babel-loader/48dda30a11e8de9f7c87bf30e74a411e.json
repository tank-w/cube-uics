{"remainingRequest":"/Users/apple/www/vue/elmapp/node_modules/babel-loader/lib/index.js!/Users/apple/www/vue/elmapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/www/vue/elmapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/www/vue/elmapp/node_modules/cube-ui/src/components/swipe/swipe-item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/www/vue/elmapp/node_modules/cube-ui/src/components/swipe/swipe-item.vue","mtime":499162500000},{"path":"/Users/apple/www/vue/elmapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/www/vue/elmapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/www/vue/elmapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/www/vue/elmapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["swipe-item.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div ref=\"swipeItem\"\n       @transitionend=\"onTransitionEnd\"\n       @touchstart=\"onTouchStart\"\n       @touchmove=\"onTouchMove\"\n       @touchend=\"onTouchEnd\"\n       class=\"cube-swipe-item\">\n    <slot>\n      <div @click=\"clickItem\" class=\"cube-swipe-item-inner border-bottom-1px\">\n        <span>{{item.text}}</span>\n      </div>\n    </slot>\n    <ul class=\"cube-swipe-btns\">\n      <li ref=\"btns\"\n          v-for=\"btn in btns\"\n          class=\"cube-swipe-btn\"\n          :style=\"genBtnStyl(btn)\"\n          @click.prevent=\"clickBtn(btn)\">\n        <span class=\"text\">{{btn.text}}</span>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import {\n    getRect,\n    prefixStyle\n  } from '../../common/helpers/dom'\n\n  import { easeOutQuart, easeOutCubic } from '../../common/helpers/ease'\n  import { getNow } from '../../common/lang/date'\n\n  const COMPONENT_NAME = 'cube-swipe-item'\n  const EVENT_ITEM_CLICK = 'item-click'\n  const EVENT_BTN_CLICK = 'btn-click'\n  const EVENT_SCROLL = 'scroll'\n  const EVENT_ACTIVE = 'active'\n  const DIRECTION_LEFT = 1\n  const DIRECTION_RIGHT = -1\n  const STATE_SHRINK = 0\n  const STATE_GROW = 1\n  const easingTime = 600\n  const momentumLimitTime = 300\n  const momentumLimitDistance = 15\n  const directionLockThreshold = 5\n\n  const transform = prefixStyle('transform')\n  const transitionProperty = prefixStyle('transitionProperty')\n  const transitionDuration = prefixStyle('transitionDuration')\n  const transitionTimingFunction = prefixStyle('transitionTimingFunction')\n\n  export default {\n    name: COMPONENT_NAME,\n    inject: ['swipe'],\n    props: {\n      item: {\n        type: Object,\n        default() {\n          return {}\n        }\n      },\n      btns: {\n        type: Array,\n        default() {\n          return []\n        }\n      },\n      index: {\n        type: Number,\n        index: -1\n      },\n      autoShrink: {\n        type: Boolean,\n        default: false\n      }\n    },\n    watch: {\n      btns() {\n        this.$nextTick(() => {\n          this.refresh()\n        })\n      }\n    },\n    created() {\n      this.x = 0\n      this.state = STATE_SHRINK\n      this.swipe.addItem(this)\n    },\n    mounted() {\n      this.scrollerStyle = this.$refs.swipeItem.style\n      this.$nextTick(() => {\n        this.refresh()\n      })\n      this.$on(EVENT_SCROLL, this._handleBtns)\n    },\n    methods: {\n      _initCachedBtns() {\n        this.cachedBtns = []\n        const len = this.$refs.btns.length\n        for (let i = 0; i < len; i++) {\n          this.cachedBtns.push({\n            width: getRect(this.$refs.btns[i]).width\n          })\n        }\n      },\n      _handleBtns(x) {\n        /* istanbul ignore if */\n        if (this.btns.length === 0) {\n          return\n        }\n        const len = this.$refs.btns.length\n        let delta = 0\n        let totalWidth = -this.maxScrollX\n        for (let i = 0; i < len; i++) {\n          const btn = this.$refs.btns[i]\n          let rate = (totalWidth - delta) / totalWidth\n          let width\n          let translate = rate * x - x\n          if (x < this.maxScrollX) {\n            width = this.cachedBtns[i].width + rate * (this.maxScrollX - x)\n          } else {\n            width = this.cachedBtns[i].width\n          }\n          delta += this.cachedBtns[i].width\n          btn.style.width = `${width}px`\n          btn.style[transform] = `translate(${translate}px)`\n          btn.style[transitionDuration] = '0ms'\n        }\n      },\n      _isInBtns(target) {\n        let parent = target\n        let flag = false\n        while (parent && parent.className.indexOf('cube-swipe-item') < 0) {\n          if (parent.className.indexOf('cube-swipe-btns') >= 0) {\n            flag = true\n            break\n          }\n          parent = parent.parentNode\n        }\n        return flag\n      },\n      _calculateBtnsWidth() {\n        let width = 0\n        const len = this.cachedBtns.length\n        for (let i = 0; i < len; i++) {\n          width += this.cachedBtns[i].width\n        }\n        this.maxScrollX = -width\n      },\n      _translate(x, useZ) {\n        let translateZ = useZ ? ' translateZ(0)' : ''\n        this.scrollerStyle[transform] = `translate(${x}px,0)${translateZ}`\n        this.x = x\n      },\n      _transitionProperty(property = 'transform') {\n        this.scrollerStyle[transitionProperty] = property\n      },\n      _transitionTimingFunction(easing) {\n        this.scrollerStyle[transitionTimingFunction] = easing\n      },\n      _transitionTime(time = 0) {\n        this.scrollerStyle[transitionDuration] = `${time}ms`\n      },\n      _getComputedPositionX() {\n        let matrix = window.getComputedStyle(this.$refs.swipeItem, null)\n        matrix = matrix[transform].split(')')[0].split(', ')\n        let x = +(matrix[12] || matrix[4])\n        return x\n      },\n      _translateBtns(time, easing, extend) {\n        /* istanbul ignore if */\n        if (this.btns.length === 0) {\n          return\n        }\n        const len = this.$refs.btns.length\n        let delta = 0\n        let translate = 0\n        for (let i = 0; i < len; i++) {\n          const btn = this.$refs.btns[i]\n          if (this.state === STATE_GROW) {\n            translate = delta\n          } else {\n            translate = 0\n          }\n          delta += this.cachedBtns[i].width\n          btn.style[transform] = `translate(${translate}px,0) translateZ(0)`\n          btn.style[transitionProperty] = 'all'\n          btn.style[transitionTimingFunction] = easing\n          btn.style[transitionDuration] = `${time}ms`\n          if (extend) {\n            btn.style.width = `${this.cachedBtns[i].width}px`\n          }\n        }\n      },\n      refresh() {\n        if (this.btns.length > 0) {\n          this._initCachedBtns()\n          this._calculateBtnsWidth()\n        }\n        this.endTime = 0\n      },\n      shrink() {\n        this.stop()\n        this.state = STATE_SHRINK\n        this.$nextTick(() => {\n          this.scrollTo(0, easingTime, easeOutQuart)\n          this._translateBtns(easingTime, easeOutQuart)\n        })\n      },\n      grow() {\n        this.state = STATE_GROW\n        const extend = this.x < this.maxScrollX\n        let easing = easeOutCubic\n        this.scrollTo(this.maxScrollX, easingTime, easing)\n        this._translateBtns(easingTime, easing, extend)\n      },\n      scrollTo(x, time, easing) {\n        this._transitionProperty()\n        this._transitionTimingFunction(easing)\n        this._transitionTime(time)\n        this._translate(x, true)\n        if (time) {\n          this.isInTransition = true\n        }\n      },\n      genBtnStyl(btn) {\n        return `background: ${btn.color}`\n      },\n      clickItem() {\n        this.swipe.onItemClick(this.item, this.index)\n        this.$emit(EVENT_ITEM_CLICK, this.item, this.index)\n      },\n      clickBtn(btn) {\n        this.swipe.onBtnClick(btn, this.index)\n        this.$emit(EVENT_BTN_CLICK, btn, this.index)\n        if (this.autoShrink) {\n          this.shrink()\n        }\n      },\n      stop() {\n        if (this.isInTransition) {\n          this.isInTransition = false\n          let x = this.state === STATE_SHRINK ? 0 : this._getComputedPositionX()\n          this._translate(x)\n          this.$emit(EVENT_SCROLL, this.x)\n        }\n      },\n      onTouchStart(e) {\n        this.swipe.onItemActive(this.index)\n        this.$emit(EVENT_ACTIVE, this.index)\n        this.stop()\n        this.moved = false\n        this.movingDirectionX = 0\n        const point = e.touches[0]\n        this.pointX = point.pageX\n        this.pointY = point.pageY\n        this.distX = 0\n        this.distY = 0\n        this.startX = this.x\n        this._transitionTime()\n        this.startTime = getNow()\n        if (this.state === STATE_GROW && !this._isInBtns(e.target)) {\n          this.shrinkTimer = setTimeout(() => {\n            this.shrink()\n          }, 300)\n        }\n      },\n      onTouchMove(e) {\n        if (this.moved) {\n          clearTimeout(this.shrinkTimer)\n          e.stopPropagation()\n        }\n        /* istanbul ignore if */\n        if (this.isInTransition) {\n          return\n        }\n        e.preventDefault()\n        const point = e.touches[0]\n        let deltaX = point.pageX - this.pointX\n        let deltaY = point.pageY - this.pointY\n        this.pointX = point.pageX\n        this.pointY = point.pageY\n\n        this.distX += deltaX\n        this.distY += deltaY\n        let absDistX = Math.abs(this.distX)\n        let absDistY = Math.abs(this.distY)\n\n        if (absDistX + directionLockThreshold <= absDistY) {\n          return\n        }\n\n        let timestamp = getNow()\n        if (timestamp - this.endTime > momentumLimitTime && absDistX < momentumLimitDistance) {\n          return\n        }\n\n        this.movingDirectionX = deltaX > 0 ? DIRECTION_RIGHT : deltaX < 0 ? DIRECTION_LEFT : 0\n\n        let newX = this.x + deltaX\n        if (newX > 0) {\n          newX = 0\n        }\n        if (newX < this.maxScrollX) {\n          newX = this.x + deltaX / 3\n        }\n        if (!this.moved) {\n          this.moved = true\n        }\n\n        this._translate(newX, true)\n\n        if (timestamp - this.startTime > momentumLimitTime) {\n          this.startTime = timestamp\n          this.startX = this.x\n        }\n\n        this.$emit(EVENT_SCROLL, this.x)\n      },\n      onTouchEnd() {\n        if (!this.moved) {\n          return\n        }\n        if (this.movingDirectionX === DIRECTION_RIGHT) {\n          this.shrink()\n          return\n        }\n        this.endTime = getNow()\n        let duration = this.endTime - this.startTime\n        let absDistX = Math.abs(this.x - this.startX)\n        if ((duration < momentumLimitTime && absDistX > momentumLimitDistance) || this.x < this.maxScrollX / 2) {\n          this.grow()\n        } else {\n          this.shrink()\n        }\n      },\n      onTransitionEnd() {\n        this.isInTransition = false\n        this._transitionTime()\n        this._translate(this.x)\n      }\n    },\n    beforeDestroy() {\n      this.swipe.removeItem(this)\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  .cube-swipe-item\n    position: relative\n\n  .cube-swipe-item-inner\n    height: 60px\n    line-height: 60px\n    font-size: $fontsize-large\n    padding-left: 20px\n\n  .cube-swipe-btn\n    display: flex\n    align-items: center\n    position: absolute\n    top: 0\n    left: 100%\n    height: 100%\n    text-align: left\n    font-size: $fontsize-large\n    .text\n      flex: 1\n      padding: 0 20px\n      white-space: nowrap\n      color: $swipe-btn-color\n</style>\n"],"sourceRoot":"node_modules/cube-ui/src/components/swipe"}]}