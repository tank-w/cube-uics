{"remainingRequest":"/Users/apple/www/vue/elmapp/node_modules/babel-loader/lib/index.js??ref--30-1!/Users/apple/www/vue/elmapp/node_modules/cube-ui/src/common/helpers/validator/rules.js","dependencies":[{"path":"/Users/apple/www/vue/elmapp/node_modules/cube-ui/src/common/helpers/validator/rules.js","mtime":499162500000},{"path":"/Users/apple/www/vue/elmapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/www/vue/elmapp/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgX3R5cGVvZiBmcm9tICIvVXNlcnMvYXBwbGUvd3d3L3Z1ZS9lbG1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZiI7CmltcG9ydCB7IGNyZWF0ZUFkZEFQSSB9IGZyb20gJy4uL3V0aWwnOwppbXBvcnQgeyB0eXBlcyB9IGZyb20gJy4vdHlwZXMnOwp2YXIgcnVsZXMgPSB7CiAgcmVxdWlyZWQ6IGZ1bmN0aW9uIHJlcXVpcmVkKHZhbCwgX3JlcXVpcmVkLCB0eXBlKSB7CiAgICB0eXBlID0gdHlwZSB8fCAoQXJyYXkuaXNBcnJheSh2YWwpID8gJ2FycmF5JyA6IF90eXBlb2YodmFsKSk7CgogICAgaWYgKHR5cGUgPT09ICdhcnJheScgJiYgQXJyYXkuaXNBcnJheSh2YWwpKSB7CiAgICAgIHJldHVybiB2YWwubGVuZ3RoID4gMDsKICAgIH0KCiAgICByZXR1cm4gdmFsICE9PSAnJyAmJiB2YWwgIT09IHVuZGVmaW5lZCAmJiB2YWwgIT09IG51bGw7CiAgfSwKICB0eXBlOiBmdW5jdGlvbiB0eXBlKHZhbCwgX3R5cGUpIHsKICAgIHJldHVybiAhdHlwZXNbX3R5cGVdIHx8IHR5cGVzW190eXBlXSh2YWwpOwogIH0sCiAgbWluOiBmdW5jdGlvbiBtaW4odmFsLCBfbWluLCB0eXBlKSB7CiAgICB0eXBlID0gdHlwZSB8fCBfdHlwZW9mKHZhbCk7CgogICAgaWYgKHR5cGUgPT09ICdudW1iZXInIHx8IHR5cGUgPT09ICdkYXRlJykgewogICAgICByZXR1cm4gTnVtYmVyKHZhbCkgPj0gX21pbjsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiB2YWwubGVuZ3RoID49IF9taW47CiAgICB9CiAgfSwKICBtYXg6IGZ1bmN0aW9uIG1heCh2YWwsIF9tYXgsIHR5cGUpIHsKICAgIHR5cGUgPSB0eXBlIHx8IF90eXBlb2YodmFsKTsKCiAgICBpZiAodHlwZSA9PT0gJ251bWJlcicgfHwgdHlwZSA9PT0gJ2RhdGUnKSB7CiAgICAgIHJldHVybiBOdW1iZXIodmFsKSA8PSBfbWF4OwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIHZhbC5sZW5ndGggPD0gX21heDsKICAgIH0KICB9LAogIGxlbjogZnVuY3Rpb24gbGVuKHZhbCwgX2xlbiwgdHlwZSkgewogICAgdHlwZSA9IHR5cGUgfHwgX3R5cGVvZih2YWwpOwogICAgdmFyIHRhcmdldCA9IHZhbDsKCiAgICBpZiAodGFyZ2V0Lmxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIHRhcmdldCA9IHR5cGUgPT09ICdvYmplY3QnID8gT2JqZWN0LmtleXModGFyZ2V0KSA6IFN0cmluZyh0YXJnZXQpOwogICAgfQoKICAgIHJldHVybiB0YXJnZXQubGVuZ3RoID09PSBfbGVuOwogIH0sCiAgbm90V2hpdGVzcGFjZTogZnVuY3Rpb24gbm90V2hpdGVzcGFjZSh2YWwsIGNvbmZpZywgdHlwZSkgewogICAgcmV0dXJuICEvXlxzKyQvLnRlc3QodmFsKTsKICB9LAogIHBhdHRlcm46IGZ1bmN0aW9uIHBhdHRlcm4odmFsLCBfcGF0dGVybiwgdHlwZSkgewogICAgcmV0dXJuIF9wYXR0ZXJuLnRlc3QodmFsKTsKICB9LAogIGN1c3RvbTogZnVuY3Rpb24gY3VzdG9tKHZhbCwgX2N1c3RvbSwgdHlwZSkgewogICAgcmV0dXJuIF9jdXN0b20odmFsKTsKICB9Cn07CnZhciBhZGRSdWxlID0gY3JlYXRlQWRkQVBJKHJ1bGVzKTsKZXhwb3J0IHsgcnVsZXMsIGFkZFJ1bGUgfTs="},{"version":3,"sources":["/Users/apple/www/vue/elmapp/node_modules/cube-ui/src/common/helpers/validator/rules.js"],"names":["createAddAPI","types","rules","required","val","type","Array","isArray","length","undefined","min","Number","max","len","target","Object","keys","String","notWhitespace","config","test","pattern","custom","addRule"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,SAA7B;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,kBAACC,GAAD,EAAMD,SAAN,EAAgBE,IAAhB,EAAyB;AACjCA,IAAAA,IAAI,GAAGA,IAAI,KAAKC,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqB,OAArB,WAAsCA,GAAtC,CAAL,CAAX;;AACA,QAAIC,IAAI,KAAK,OAAT,IAAoBC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAxB,EAA4C;AAC1C,aAAOA,GAAG,CAACI,MAAJ,GAAa,CAApB;AACD;;AACD,WAAOJ,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAKK,SAAtB,IAAmCL,GAAG,KAAK,IAAlD;AACD,GAPW;AAQZC,EAAAA,IAAI,EAAE,cAACD,GAAD,EAAMC,KAAN,EAAe;AACnB,WAAO,CAACJ,KAAK,CAACI,KAAD,CAAN,IAAgBJ,KAAK,CAACI,KAAD,CAAL,CAAYD,GAAZ,CAAvB;AACD,GAVW;AAWZM,EAAAA,GAAG,EAAE,aAACN,GAAD,EAAMM,IAAN,EAAWL,IAAX,EAAoB;AACvBA,IAAAA,IAAI,GAAGA,IAAI,YAAYD,GAAZ,CAAX;;AACA,QAAIC,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,MAAlC,EAA0C;AACxC,aAAOM,MAAM,CAACP,GAAD,CAAN,IAAeM,IAAtB;AACD,KAFD,MAEO;AACL,aAAON,GAAG,CAACI,MAAJ,IAAcE,IAArB;AACD;AACF,GAlBW;AAmBZE,EAAAA,GAAG,EAAE,aAACR,GAAD,EAAMQ,IAAN,EAAWP,IAAX,EAAoB;AACvBA,IAAAA,IAAI,GAAGA,IAAI,YAAYD,GAAZ,CAAX;;AACA,QAAIC,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,MAAlC,EAA0C;AACxC,aAAOM,MAAM,CAACP,GAAD,CAAN,IAAeQ,IAAtB;AACD,KAFD,MAEO;AACL,aAAOR,GAAG,CAACI,MAAJ,IAAcI,IAArB;AACD;AACF,GA1BW;AA2BZC,EAAAA,GAAG,EAAE,aAACT,GAAD,EAAMS,IAAN,EAAWR,IAAX,EAAoB;AACvBA,IAAAA,IAAI,GAAGA,IAAI,YAAYD,GAAZ,CAAX;AACA,QAAIU,MAAM,GAAGV,GAAb;;AACA,QAAIU,MAAM,CAACN,MAAP,KAAkBC,SAAtB,EAAiC;AAC/BK,MAAAA,MAAM,GAAGT,IAAI,KAAK,QAAT,GAAoBU,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAApB,GAA0CG,MAAM,CAACH,MAAD,CAAzD;AACD;;AACD,WAAOA,MAAM,CAACN,MAAP,KAAkBK,IAAzB;AACD,GAlCW;AAmCZK,EAAAA,aAAa,EAAE,uBAACd,GAAD,EAAMe,MAAN,EAAcd,IAAd,EAAuB;AACpC,WAAO,CAAC,QAAQe,IAAR,CAAahB,GAAb,CAAR;AACD,GArCW;AAsCZiB,EAAAA,OAAO,EAAE,iBAACjB,GAAD,EAAMiB,QAAN,EAAehB,IAAf,EAAwB;AAC/B,WAAOgB,QAAO,CAACD,IAAR,CAAahB,GAAb,CAAP;AACD,GAxCW;AAyCZkB,EAAAA,MAAM,EAAE,gBAAClB,GAAD,EAAMkB,OAAN,EAAcjB,IAAd,EAAuB;AAC7B,WAAOiB,OAAM,CAAClB,GAAD,CAAb;AACD;AA3CW,CAAd;AA8CA,IAAMmB,OAAO,GAAGvB,YAAY,CAACE,KAAD,CAA5B;AAEA,SAASA,KAAT,EAAgBqB,OAAhB","sourcesContent":["import { createAddAPI } from '../util'\nimport { types } from './types'\n\nconst rules = {\n  required: (val, required, type) => {\n    type = type || (Array.isArray(val) ? 'array' : typeof val)\n    if (type === 'array' && Array.isArray(val)) {\n      return val.length > 0\n    }\n    return val !== '' && val !== undefined && val !== null\n  },\n  type: (val, type) => {\n    return !types[type] || types[type](val)\n  },\n  min: (val, min, type) => {\n    type = type || (typeof val)\n    if (type === 'number' || type === 'date') {\n      return Number(val) >= min\n    } else {\n      return val.length >= min\n    }\n  },\n  max: (val, max, type) => {\n    type = type || (typeof val)\n    if (type === 'number' || type === 'date') {\n      return Number(val) <= max\n    } else {\n      return val.length <= max\n    }\n  },\n  len: (val, len, type) => {\n    type = type || (typeof val)\n    let target = val\n    if (target.length === undefined) {\n      target = type === 'object' ? Object.keys(target) : String(target)\n    }\n    return target.length === len\n  },\n  notWhitespace: (val, config, type) => {\n    return !/^\\s+$/.test(val)\n  },\n  pattern: (val, pattern, type) => {\n    return pattern.test(val)\n  },\n  custom: (val, custom, type) => {\n    return custom(val)\n  }\n}\n\nconst addRule = createAddAPI(rules)\n\nexport { rules, addRule }\n"]}]}