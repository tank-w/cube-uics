{"remainingRequest":"/Users/apple/www/vue/elmapp/node_modules/babel-loader/lib/index.js??ref--30-1!/Users/apple/www/vue/elmapp/node_modules/cube-ui/src/components/form/fields/types.js","dependencies":[{"path":"/Users/apple/www/vue/elmapp/node_modules/cube-ui/src/components/form/fields/types.js","mtime":499162500000},{"path":"/Users/apple/www/vue/elmapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/www/vue/elmapp/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgYm9vbFJlcXVpcmVkSGFuZGxlciwgbnVtYmVyR1QwUmVxdWlyZWRIYW5kbGVyIH0gZnJvbSAnLi92YWxpZGF0ZSc7CmltcG9ydCB7IHRvQnV0dG9uSGFuZGxlciB9IGZyb20gJy4vcHJvcHMnOwp2YXIgdHlwZXNNYXAgPSB7CiAgc3VibWl0OiBmdW5jdGlvbiBzdWJtaXQoZmllbGQpIHsKICAgIHRvQnV0dG9uSGFuZGxlcihmaWVsZCwgJ3N1Ym1pdCcpOwogIH0sCiAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KGZpZWxkKSB7CiAgICB0b0J1dHRvbkhhbmRsZXIoZmllbGQsICdyZXNldCcpOwogIH0sCiAgY2hlY2tib3g6IGZ1bmN0aW9uIGNoZWNrYm94KGZpZWxkKSB7CiAgICBib29sUmVxdWlyZWRIYW5kbGVyKGZpZWxkKTsKICB9LAogIHN3aXRjaDogZnVuY3Rpb24gX3N3aXRjaChmaWVsZCkgewogICAgYm9vbFJlcXVpcmVkSGFuZGxlcihmaWVsZCk7CiAgfSwKICByYXRlOiBmdW5jdGlvbiByYXRlKGZpZWxkKSB7CiAgICBudW1iZXJHVDBSZXF1aXJlZEhhbmRsZXIoZmllbGQpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJvY2Vzc1R5cGVzKGZpZWxkKSB7CiAgdmFyIHR5cGVGbiA9IHR5cGVzTWFwW2ZpZWxkLnR5cGVdOwoKICBpZiAodHlwZUZuKSB7CiAgICB0eXBlRm4oZmllbGQpOwogIH0KfQ=="},{"version":3,"sources":["/Users/apple/www/vue/elmapp/node_modules/cube-ui/src/components/form/fields/types.js"],"names":["boolRequiredHandler","numberGT0RequiredHandler","toButtonHandler","typesMap","submit","field","reset","checkbox","switch","rate","processTypes","typeFn","type"],"mappings":"AAAA,SACEA,mBADF,EAEEC,wBAFF,QAGO,YAHP;AAIA,SACEC,eADF,QAEO,SAFP;AAIA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,MADe,kBACRC,KADQ,EACD;AACZH,IAAAA,eAAe,CAACG,KAAD,EAAQ,QAAR,CAAf;AACD,GAHc;AAIfC,EAAAA,KAJe,iBAITD,KAJS,EAIF;AACXH,IAAAA,eAAe,CAACG,KAAD,EAAQ,OAAR,CAAf;AACD,GANc;AAOfE,EAAAA,QAPe,oBAONF,KAPM,EAOC;AACdL,IAAAA,mBAAmB,CAACK,KAAD,CAAnB;AACD,GATc;AAUfG,EAAAA,MAVe,mBAURH,KAVQ,EAUD;AACZL,IAAAA,mBAAmB,CAACK,KAAD,CAAnB;AACD,GAZc;AAafI,EAAAA,IAbe,gBAaVJ,KAbU,EAaH;AACVJ,IAAAA,wBAAwB,CAACI,KAAD,CAAxB;AACD;AAfc,CAAjB;AAiBA,eAAe,SAASK,YAAT,CAAsBL,KAAtB,EAA6B;AAC1C,MAAMM,MAAM,GAAGR,QAAQ,CAACE,KAAK,CAACO,IAAP,CAAvB;;AACA,MAAID,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACN,KAAD,CAAN;AACD;AACF","sourcesContent":["import {\n  boolRequiredHandler,\n  numberGT0RequiredHandler\n} from './validate'\nimport {\n  toButtonHandler\n} from './props'\n\nconst typesMap = {\n  submit(field) {\n    toButtonHandler(field, 'submit')\n  },\n  reset(field) {\n    toButtonHandler(field, 'reset')\n  },\n  checkbox(field) {\n    boolRequiredHandler(field)\n  },\n  switch(field) {\n    boolRequiredHandler(field)\n  },\n  rate(field) {\n    numberGT0RequiredHandler(field)\n  }\n}\nexport default function processTypes(field) {\n  const typeFn = typesMap[field.type]\n  if (typeFn) {\n    typeFn(field)\n  }\n}\n"]}]}